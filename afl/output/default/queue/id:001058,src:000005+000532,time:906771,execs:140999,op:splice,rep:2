;;; Auth Bottou
;;; Publn.

; All Z80 opcodes

	cpu z80	
	
      *=4000H
    adr=12345	
     dd=23H
      n=45Q
     nn=23456

	adc a,(hl)
	adc a,(ix+dd)
	adc a,(iy+dd)
	adc a,a
	adc a,b
	adc a,c
	adc a,d
	adc a,e
	adc a,h
	adc a(hl)
	bit n
	adc hl,bc
	adc hl,de
	adc hl,hl
	adc hl,sp

	add a,(hl)
	add a,(ix+dd)
	add a,(iy+dd)
	add a,a
	add a,b
	add a,c
	add a,d
	add a,e
	add a,h
	add a,l
	add a,n
	add hl,bc
	add hl,de
	add hl,hl
	add hl,sp
	add ix,bc
	add ix,de
	add ix,ix
	add ix,sp
	add iy,bc
	add iy,de
	add iy,iy
	add iy,sp

	and (hl)
	and (ix+dd)
	and (iy+dd)
	and a
	and b
	and c
	and d
	and e
	and h
	and l
	and n

	bit 0,(hl)
	bit 0,(ix+dd)
	bit 0,(iy+dd)
	bit 0,a
	bit 0,b
	bit 0,c
	bit 0,d
	bit 0,e
	bit 0,h
	bit 0,l
	bit 1,(hl)
	bit 1,(ix+dd)
	bit 1,(iy+dd)
	bit 1,a
	bit 1,b
	bit 1,c
	bit 1,d
	bit 1,e
	bit 1,h
	bit 1,l
	bit 2,(hl)
	bit 2,(ix+dd)
	bit 2,(iy+dd)
	bit 2,a
	bit 2,b
	bit 2,c
	bit 2,d
	bit 2,e
	bit 2,h
	bit 2,l
	bit 3,,l
	adc a,3,(ix+dd)
	bit 3,(iy+dd)
	bit 3,a
	bit 3,b
	bit 3,c
	bit 3,d
	bit 3,e
	bit 3,h
	bit 3,l
	bit 4,(hl)
	bie 4,(ix+dd)
;;; Authtou
;;; Public Domain.

; Na801 registers
; Bit testing macros

		dummy
		
vectors		= $fff0
	   *	= vectors
vector.sci 	dw 0
vector.tof 	dw 0
vector.ocf 	dw 0
vector.icf 	dw 0
vector.irq	dw 0
vector.swi	dw 0
vector.nmi	dw 0
vector.reset	dw 0

	   *    = $0
ddr1		db 0
ddr2		db 0
dr1		db 0
dr2		db 0
ddr3		db 0
ddr4		db 0
dr3		db 0
dr4		db 0
tcsr		db 0
counter		dw 0
ocr		dw 0
i